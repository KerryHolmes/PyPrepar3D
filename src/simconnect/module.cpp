#include "module.hpp"
#include "converter.hpp"

BOOST_PYTHON_MODULE(_simconnect)
{
	using namespace boost::python;

	to_python_converter<DWORD, prepar3d::_internal::DWORD_CONVERTER>();
	to_python_converter<char, prepar3d::_internal::CHAR_CONVERTER>();
	to_python_converter<char [256], prepar3d::_internal::CHAR_ARRAY_CONVERTER<256> >();
	to_python_converter<char [MAX_PATH], prepar3d::_internal::CHAR_ARRAY_CONVERTER<MAX_PATH> >();

	prepar3d::_internal::define_constants(&scope());

//#######################################################################################
//  function section
//#######################################################################################

	def("open", prepar3d::simconnect_open);
	def("close", prepar3d::simconnect_close);
	def("call_dispatch", prepar3d::simconnect_calldispatch);
	def("subscribe_to_system_event", prepar3d::simconnect_subscribe_to_system_event);

//#######################################################################################
//  enum section
//#######################################################################################

	//
	// Flags used in SimConnect_RequestGroundInfo API call
	//

	// specify format for the LatLon components
	ENUM(SIMCONNECT_GROUND_INFO_LATLON_FORMAT)
		ENUM_VALUE(SIMCONNECT_GROUND_INFO_LATLON_FORMAT_RADIANS)
		ENUM_VALUE(SIMCONNECT_GROUND_INFO_LATLON_FORMAT_DEGREES)
		ENUM_VALUE(SIMCONNECT_GROUND_INFO_LATLON_FORMAT_METERS);

	// specify format for the Alt components
	ENUM(SIMCONNECT_GROUND_INFO_ALT_FORMAT)
		ENUM_VALUE(SIMCONNECT_GROUND_INFO_ALT_FORMAT_METERS)
		ENUM_VALUE(SIMCONNECT_GROUND_INFO_ALT_FORMAT_FEET);

	ENUM(SIMCONNECT_CAMERA_SENSOR_MODE)
		ENUM_VALUE(SIMCONNECT_CAMERA_SENSOR_NONE)
		ENUM_VALUE(SIMCONNECT_CAMERA_SENSOR_IR)
		ENUM_VALUE(SIMCONNECT_CAMERA_SENSOR_IR_BLACK_HOT)
		ENUM_VALUE(SIMCONNECT_CAMERA_SENSOR_GDATA);

	ENUM(SIMCONNECT_LICENSE_TYPE)
		ENUM_VALUE(SIMCONNECT_LICENSE_ACADEMIC)
		ENUM_VALUE(SIMCONNECT_LICENSE_PROFESSIONAL)
		ENUM_VALUE(SIMCONNECT_LICENSE_PROFESSIONAL_PLUS)
		ENUM_VALUE(SIMCONNECT_LICENSE_UNKNOWN);

	ENUM(SIMCONNECT_SCENERY_COMPLEXITY)
		ENUM_VALUE(SIMCONNECT_SCENERY_COMPLEXITY_VERY_SPARSE)
		ENUM_VALUE(SIMCONNECT_SCENERY_COMPLEXITY_SPARSE)
		ENUM_VALUE(SIMCONNECT_SCENERY_COMPLEXITY_NORMAL)
		ENUM_VALUE(SIMCONNECT_SCENERY_COMPLEXITY_DENSE)
		ENUM_VALUE(SIMCONNECT_SCENERY_COMPLEXITY_VERY_DENSE)
		ENUM_VALUE(SIMCONNECT_SCENERY_COMPLEXITY_EXTREMELY_DENSE);

	ENUM(SIMCONNECT_GOAL_STATE)
		ENUM_VALUE(SIMCONNECT_GOAL_STATE_GOAL_PENDING)
		ENUM_VALUE(SIMCONNECT_GOAL_STATE_GOAL_COMPLETED)
		ENUM_VALUE(SIMCONNECT_GOAL_STATE_GOAL_FAILED);

	ENUM(SIMCONNECT_GOAL_RESOLUTION)
		ENUM_VALUE(SIMCONNECT_GOAL_RESOLUTION_COMPLETED)
		ENUM_VALUE(SIMCONNECT_GOAL_RESOLUTION_FAILED);

	ENUM(SIMCONNECT_MISSION_OBJECTIVE_STATUS)
		ENUM_VALUE(SIMCONNECT_MISSION_OBJECTIVE_STATUS_PENDING)
		ENUM_VALUE(SIMCONNECT_MISSION_OBJECTIVE_STATUS_PASSED)
		ENUM_VALUE(SIMCONNECT_MISSION_OBJECTIVE_STATUS_FAILED);

	ENUM(SIMCONNECT_MISSION_OBJECT_TYPE)
		ENUM_VALUE(SIMCONNECT_MISSION_OBJECT_TYPE_GOAL)
		ENUM_VALUE(SIMCONNECT_MISSION_OBJECT_TYPE_MISSION_OBJECTIVE)
		ENUM_VALUE(SIMCONNECT_MISSION_OBJECT_TYPE_FLIGHT_SEGMENT)
		ENUM_VALUE(SIMCONNECT_MISSION_OBJECT_TYPE_LANDING_TRIGGER);

	ENUM(SIMCONNECT_LANDING_TYPE)
		ENUM_VALUE(SIMCONNECT_LANDING_TYPE_ANY)
		ENUM_VALUE(SIMCONNECT_LANDING_TYPE_FULL_STOP)
		ENUM_VALUE(SIMCONNECT_LANDING_TYPE_TOUCHDOWN);

	// Receive data types *ALWAYS ADD TO THE END OF THE ENUM*
	ENUM(SIMCONNECT_RECV_ID)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_NULL)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EXCEPTION)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_OPEN)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_QUIT)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT_OBJECT_ADDREMOVE)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT_FILENAME)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT_FRAME)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_SIMOBJECT_DATA)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_SIMOBJECT_DATA_BYTYPE)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_WEATHER_OBSERVATION)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_CLOUD_STATE)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_ASSIGNED_OBJECT_ID)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_RESERVED_KEY)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_CUSTOM_ACTION)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_SYSTEM_STATE)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_CLIENT_DATA)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT_WEATHER_MODE)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_AIRPORT_LIST)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_VOR_LIST)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_NDB_LIST)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_WAYPOINT_LIST)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT_MULTIPLAYER_SERVER_STARTED)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT_MULTIPLAYER_CLIENT_STARTED)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT_MULTIPLAYER_SESSION_ENDED)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT_RACE_END)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT_RACE_LAP)
		ENUM_VALUE(SIMCONNECT_RECV_ID_OBSERVER_DATA)

	    ENUM_VALUE(SIMCONNECT_RECV_ID_GROUND_INFO)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_SYNCHRONOUS_BLOCK)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EXTERNAL_SIM_CREATE)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EXTERNAL_SIM_DESTROY)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EXTERNAL_SIM_SIMULATE)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EXTERNAL_SIM_LOCATION_CHANGED)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EXTERNAL_SIM_EVENT)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT_WEAPON)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT_COUNTERMEASURE)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT_OBJECT_DAMAGED_BY_WEAPON)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_VERSION)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_SCENERY_COMPLEXITY)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_SHADOW_FLAGS)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_TACAN_LIST)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_CAMERA_6DOF)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_CAMERA_FOV)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_CAMERA_SENSOR_MODE)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_CAMERA_WINDOW_POSITION)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_CAMERA_WINDOW_SIZE)
		ENUM_VALUE(SIMCONNECT_RECV_ID_MISSION_OBJECT_COUNT)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_GOAL)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_MISSION_OBJECTIVE)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_FLIGHT_SEGMENT)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_PARAMETER_RANGE)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_FLIGHT_SEGMENT_READY_FOR_GRADING)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_GOAL_PAIR)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_EVENT_FLIGHT_ANALYSIS_DIAGRAMS)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_LANDING_TRIGGER_INFO)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_LANDING_INFO)
	    ENUM_VALUE(SIMCONNECT_RECV_ID_SESSION_DURATION);

	// Data data types
	ENUM(SIMCONNECT_DATATYPE)
		ENUM_VALUE(SIMCONNECT_DATATYPE_INVALID)        // invalid data type
		ENUM_VALUE(SIMCONNECT_DATATYPE_INT32)          // 32-bit integer number
		ENUM_VALUE(SIMCONNECT_DATATYPE_INT64)          // 64-bit integer number
		ENUM_VALUE(SIMCONNECT_DATATYPE_FLOAT32)        // 32-bit floating-point number (float)
		ENUM_VALUE(SIMCONNECT_DATATYPE_FLOAT64)        // 64-bit floating-point number (double)
		ENUM_VALUE(SIMCONNECT_DATATYPE_STRING8)        // 8-byte string
		ENUM_VALUE(SIMCONNECT_DATATYPE_STRING32)       // 32-byte string
		ENUM_VALUE(SIMCONNECT_DATATYPE_STRING64)       // 64-byte string
		ENUM_VALUE(SIMCONNECT_DATATYPE_STRING128)      // 128-byte string
		ENUM_VALUE(SIMCONNECT_DATATYPE_STRING256)      // 256-byte string
		ENUM_VALUE(SIMCONNECT_DATATYPE_STRING260)      // 260-byte string
		ENUM_VALUE(SIMCONNECT_DATATYPE_STRINGV)        // variable-length string

		ENUM_VALUE(SIMCONNECT_DATATYPE_INITPOSITION)   // see SIMCONNECT_DATA_INITPOSITION
		ENUM_VALUE(SIMCONNECT_DATATYPE_MARKERSTATE)    // see SIMCONNECT_DATA_MARKERSTATE
		ENUM_VALUE(SIMCONNECT_DATATYPE_WAYPOINT)       // see SIMCONNECT_DATA_WAYPOINT
		ENUM_VALUE(SIMCONNECT_DATATYPE_LATLONALT)      // see SIMCONNECT_DATA_LATLONALT
		ENUM_VALUE(SIMCONNECT_DATATYPE_XYZ)            // see SIMCONNECT_DATA_XYZ
		ENUM_VALUE(SIMCONNECT_DATATYPE_PBH)            // see SIMCONNECT_DATA_PBH
		ENUM_VALUE(SIMCONNECT_DATATYPE_OBSERVER)       // see SIMCONNECT_DATA_OBSERVER
		ENUM_VALUE(SIMCONNECT_DATATYPE_OBJECT_DAMAGED_BY_WEAPON)   // see SIMCONNECT_DATA_OBJECT_DAMAGED_BY_WEAPON

		ENUM_VALUE(SIMCONNECT_DATATYPE_MAX );            // enum limit

	// Exception error types
	ENUM(SIMCONNECT_EXCEPTION)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_NONE)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_ERROR)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_SIZE_MISMATCH)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_UNRECOGNIZED_ID)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_UNOPENED)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_VERSION_MISMATCH)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_TOO_MANY_GROUPS)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_NAME_UNRECOGNIZED)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_TOO_MANY_EVENT_NAMES)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_EVENT_ID_DUPLICATE)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_TOO_MANY_MAPS)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_TOO_MANY_OBJECTS)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_TOO_MANY_REQUESTS)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_WEATHER_INVALID_PORT)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_WEATHER_INVALID_METAR)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_WEATHER_UNABLE_TO_GET_OBSERVATION)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_WEATHER_UNABLE_TO_CREATE_STATION)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_WEATHER_UNABLE_TO_REMOVE_STATION)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_INVALID_DATA_TYPE)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_INVALID_DATA_SIZE)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_DATA_ERROR)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_INVALID_ARRAY)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_CREATE_OBJECT_FAILED)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_LOAD_FLIGHTPLAN_FAILED)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_OPERATION_INVALID_FOR_OBJECT_TYPE)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_ILLEGAL_OPERATION)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_ALREADY_SUBSCRIBED)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_INVALID_ENUM)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_DEFINITION_ERROR)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_DUPLICATE_ID)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_DATUM_ID)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_OUT_OF_BOUNDS)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_ALREADY_CREATED)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_OBJECT_OUTSIDE_REALITY_BUBBLE)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_OBJECT_CONTAINER)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_OBJECT_AI)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_OBJECT_ATC)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_OBJECT_SCHEDULE)
		ENUM_VALUE(SIMCONNECT_EXCEPTION_BLOCK_TIMEOUT);

	// Object types
	ENUM(SIMCONNECT_SIMOBJECT_TYPE)
		ENUM_VALUE(SIMCONNECT_SIMOBJECT_TYPE_USER)
		ENUM_VALUE(SIMCONNECT_SIMOBJECT_TYPE_ALL)
		ENUM_VALUE(SIMCONNECT_SIMOBJECT_TYPE_AIRPLANE)
		ENUM_VALUE(SIMCONNECT_SIMOBJECT_TYPE_AIRPLANE)
		ENUM_VALUE(SIMCONNECT_SIMOBJECT_TYPE_HELICOPTER)
		ENUM_VALUE(SIMCONNECT_SIMOBJECT_TYPE_BOAT)
		ENUM_VALUE( SIMCONNECT_SIMOBJECT_TYPE_GROUND)
		ENUM_VALUE(SIMCONNECT_SIMOBJECT_TYPE_WEAPON);

	// EventState values
	ENUM(SIMCONNECT_STATE)
	    ENUM_VALUE(SIMCONNECT_STATE_OFF)
	    ENUM_VALUE(SIMCONNECT_STATE_ON);

	// Object Data Request Period values
	ENUM(SIMCONNECT_PERIOD)
	    ENUM_VALUE(SIMCONNECT_PERIOD_NEVER)
	    ENUM_VALUE(SIMCONNECT_PERIOD_ONCE)
	    ENUM_VALUE(SIMCONNECT_PERIOD_VISUAL_FRAME)
	    ENUM_VALUE(SIMCONNECT_PERIOD_SIM_FRAME)
	    ENUM_VALUE(SIMCONNECT_PERIOD_SECOND);

	// ClientData Request Period values
	ENUM(SIMCONNECT_CLIENT_DATA_PERIOD)
	    ENUM_VALUE(SIMCONNECT_CLIENT_DATA_PERIOD_NEVER)
	    ENUM_VALUE(SIMCONNECT_CLIENT_DATA_PERIOD_ONCE)
	    ENUM_VALUE(SIMCONNECT_CLIENT_DATA_PERIOD_VISUAL_FRAME)
	    ENUM_VALUE(SIMCONNECT_CLIENT_DATA_PERIOD_ON_SET)
	    ENUM_VALUE(SIMCONNECT_CLIENT_DATA_PERIOD_SECOND);

	ENUM(SIMCONNECT_MISSION_END)
		ENUM_VALUE(SIMCONNECT_MISSION_FAILED)
		ENUM_VALUE(SIMCONNECT_MISSION_CRASHED)
		ENUM_VALUE(SIMCONNECT_MISSION_SUCCEEDED);

	ENUM(SIMCONNECT_TEXT_TYPE)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_SCROLL_BLACK)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_SCROLL_WHITE)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_SCROLL_RED)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_SCROLL_GREEN)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_SCROLL_BLUE)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_SCROLL_YELLOW)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_SCROLL_MAGENTA)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_SCROLL_CYAN)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_PRINT_BLACK)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_PRINT_WHITE)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_PRINT_RED)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_PRINT_GREEN)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_PRINT_BLUE)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_PRINT_YELLOW)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_PRINT_MAGENTA)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_PRINT_CYAN)
	    ENUM_VALUE(SIMCONNECT_TEXT_TYPE_MENU);

	ENUM(SIMCONNECT_TEXT_RESULT)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_MENU_SELECT_1)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_MENU_SELECT_2)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_MENU_SELECT_3)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_MENU_SELECT_4)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_MENU_SELECT_5)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_MENU_SELECT_6)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_MENU_SELECT_7)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_MENU_SELECT_8)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_MENU_SELECT_9)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_MENU_SELECT_10)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_DISPLAYED)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_QUEUED)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_REMOVED)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_REPLACED)
	    ENUM_VALUE(SIMCONNECT_TEXT_RESULT_TIMEOUT);

	ENUM(SIMCONNECT_WEATHER_MODE)
	    ENUM_VALUE(SIMCONNECT_WEATHER_MODE_THEME)
		ENUM_VALUE(SIMCONNECT_WEATHER_MODE_RWW) // deprecated
		ENUM_VALUE(SIMCONNECT_WEATHER_MODE_CUSTOM)
		ENUM_VALUE(SIMCONNECT_WEATHER_MODE_GLOBAL);

	ENUM(SIMCONNECT_FACILITY_LIST_TYPE)
	    ENUM_VALUE(SIMCONNECT_FACILITY_LIST_TYPE_AIRPORT)
	    ENUM_VALUE(SIMCONNECT_FACILITY_LIST_TYPE_WAYPOINT)
	    ENUM_VALUE(SIMCONNECT_FACILITY_LIST_TYPE_NDB)
	    ENUM_VALUE(SIMCONNECT_FACILITY_LIST_TYPE_VOR)
	    ENUM_VALUE(SIMCONNECT_FACILITY_LIST_TYPE_TACAN)
	    ENUM_VALUE(SIMCONNECT_FACILITY_LIST_TYPE_COUNT); // invalid

	// Camera types
	ENUM(SIMCONNECT_CAMERA_TYPE)
		ENUM_VALUE(SIMCONNECT_CAMERA_TYPE_OBJECT_PANEL)
	    ENUM_VALUE(SIMCONNECT_CAMERA_TYPE_OBJECT_VIRTUAL)
	    ENUM_VALUE(SIMCONNECT_CAMERA_TYPE_OBJECT_CENTER)
	    ENUM_VALUE(SIMCONNECT_CAMERA_TYPE_OBJECT_PILOT)
	    ENUM_VALUE(SIMCONNECT_CAMERA_TYPE_TOWER)
	    ENUM_VALUE(SIMCONNECT_CAMERA_TYPE_FIXED)
	    ENUM_VALUE(SIMCONNECT_CAMERA_TYPE_WORLD_OBJECT)
	    ENUM_VALUE(SIMCONNECT_CAMERA_TYPE_LATLONALT_ORTHOGONAL)
	    ENUM_VALUE(SIMCONNECT_CAMERA_TYPE_OBJECT_AI_VIRTUAL);

//#######################################################################################
//  structure section
//#######################################################################################

	STRUCT(SIMCONNECT_RECV)
		STRUCT_VALUE(dwSize, SIMCONNECT_RECV)
		STRUCT_VALUE(dwVersion, SIMCONNECT_RECV)
		STRUCT_VALUE(dwID, SIMCONNECT_RECV);

	STRUCT_DERIVED(SIMCONNECT_RECV_EXCEPTION,SIMCONNECT_RECV)
			STRUCT_VALUE(dwException, SIMCONNECT_RECV_EXCEPTION)
			STRUCT_VALUE(dwSendID, SIMCONNECT_RECV_EXCEPTION)
			STRUCT_VALUE(dwIndex, SIMCONNECT_RECV_EXCEPTION)
			.def_readonly("UNKNOWN_INDEX", SIMCONNECT_RECV_EXCEPTION::UNKNOWN_INDEX)
			.def_readonly("UNKNOWN_SENDID", SIMCONNECT_RECV_EXCEPTION::UNKNOWN_SENDID);

	STRUCT_DERIVED(SIMCONNECT_RECV_OPEN, SIMCONNECT_RECV)
		.add_property("szApplicationName", &SIMCONNECT_RECV_OPEN::szApplicationName)
		STRUCT_VALUE(dwApplicationVersionMajor, SIMCONNECT_RECV_OPEN)
		STRUCT_VALUE(dwApplicationVersionMinor, SIMCONNECT_RECV_OPEN)
		STRUCT_VALUE(dwApplicationBuildMajor, SIMCONNECT_RECV_OPEN)
		STRUCT_VALUE(dwApplicationBuildMinor, SIMCONNECT_RECV_OPEN)
		STRUCT_VALUE(dwSimConnectVersionMajor, SIMCONNECT_RECV_OPEN)
		STRUCT_VALUE(dwSimConnectVersionMinor, SIMCONNECT_RECV_OPEN)
		STRUCT_VALUE(dwSimConnectBuildMajor, SIMCONNECT_RECV_OPEN)
		STRUCT_VALUE(dwSimConnectBuildMinor, SIMCONNECT_RECV_OPEN)
		STRUCT_VALUE(dwReserved1, SIMCONNECT_RECV_OPEN)
		STRUCT_VALUE(dwReserved2, SIMCONNECT_RECV_OPEN);

	STRUCT_DERIVED(SIMCONNECT_RECV_QUIT, SIMCONNECT_RECV);

	STRUCT_DERIVED(SIMCONNECT_RECV_EVENT_BASE, SIMCONNECT_RECV)
		STRUCT_VALUE(uGroupID, SIMCONNECT_RECV_EVENT_BASE)
		STRUCT_VALUE(uEventID, SIMCONNECT_RECV_EVENT_BASE)
		STRUCT_VALUE(dwData, SIMCONNECT_RECV_EVENT_BASE)
		.def_readonly("UNKNOWN_GROUP", SIMCONNECT_RECV_EVENT_BASE::UNKNOWN_GROUP);

	STRUCT_DERIVED(SIMCONNECT_RECV_EVENT, SIMCONNECT_RECV_EVENT_BASE)
		STRUCT_VALUE(dwFlags, SIMCONNECT_RECV_EVENT);


	STRUCT_DERIVED(SIMCONNECT_RECV_EVENT_FILENAME, SIMCONNECT_RECV_EVENT_BASE)
		.add_property("szFileName", &SIMCONNECT_RECV_EVENT_FILENAME::szFileName)
		STRUCT_VALUE(dwFlags, SIMCONNECT_RECV_EVENT_FILENAME);

	STRUCT_DERIVED(SIMCONNECT_RECV_EVENT_OBJECT_ADDREMOVE, SIMCONNECT_RECV_EVENT_BASE)
		STRUCT_VALUE(eObjType, SIMCONNECT_RECV_EVENT_OBJECT_ADDREMOVE)
		STRUCT_VALUE(dwFlags, SIMCONNECT_RECV_EVENT_OBJECT_ADDREMOVE);


}

